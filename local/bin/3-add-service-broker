#!/bin/bash -e
APP_NAME="hello-world"

# get the Conjur service broker, upload to cf, and configure
curl -L $(curl -s https://api.github.com/repos/cyberark/conjur-service-broker/releases/latest | jq -r ".zipball_url") > conjur-service-broker.zip
unzip conjur-service-broker.zip
repo_dir=$(ls | grep cyberark-conjur-service-broker)
mv $repo_dir conjur-service-broker

# push the SB app
pushd conjur-service-broker
  cf push --no-start --random-route
popd
rm -rf conjur-service-broker*

# wait for Conjur to get admin api key
docker-compose exec -T conjur conjurctl wait -r 30 -p 80
api_key=$(docker-compose exec -T conjur bash -c 'rails r "puts Role[%Q{default:user:admin}].api_key" 2>/dev/null')

echo "API key: $api_key"

# configuring the SB env
cf set-env conjur-service-broker SECURITY_USER_NAME TEMPORARY
cf set-env conjur-service-broker SECURITY_USER_PASSWORD TEMPORARY
cf set-env conjur-service-broker CONJUR_ACCOUNT default
cf set-env conjur-service-broker CONJUR_APPLIANCE_URL http://host.pcfdev.io
cf set-env conjur-service-broker CONJUR_AUTHN_LOGIN admin
cf set-env conjur-service-broker CONJUR_AUTHN_API_KEY "$api_key"

# start the SB app
cf start conjur-service-broker

# create the SB
APP_URL="http://`cf app conjur-service-broker | grep -E -w 'urls:|routes:' | awk '{print $2}'`"
cf create-service-broker conjur-service-broker "TEMPORARY" "TEMPORARY" $APP_URL --space-scoped

# create the service instance
cf create-service cyberark-conjur community conjur
