#!/bin/bash -e
BIN_DIR=$(cd "$(dirname $0)/."  && pwd)
ROOT_DIR=$BIN_DIR/../

# stop will make sure PCFDev is running and the `cf` binary is installed
./bin/stop

# make sure meta-buildpack is installed
git clone https://github.com/cf-platform-eng/meta-buildpack.git
pushd meta-buildpack
./build
./upload
popd
rm -rf meta-buildpack


# set up Conjur containers
docker-compose up -d

# set up cloudfoundry space
cf create-space demo
cf target -s demo

# install conjur buildpack
pushd cloudfoundry-conjur-buildpack
  ./upload
popd

# start and configure conjur service broker
pushd conjur-service-broker
  cf push --no-start --random-route

  printf "Waiting for API key... "
  while [[ ! -f $ROOT_DIR/tmp/api_key ]]
  do
    sleep 1
  done

  while [[ -z `cat $ROOT_DIR/tmp/api_key` ]]
  do
    sleep 1
  done
  echo "Done."

  cf set-env conjur-service-broker CONJUR_ACCOUNT default
  cf set-env conjur-service-broker CONJUR_APPLIANCE_URL http://host.pcfdev.io:3000
  cf set-env conjur-service-broker CONJUR_AUTHN_LOGIN admin
  cf set-env conjur-service-broker CONJUR_AUTHN_API_KEY "$(cat $ROOT_DIR/tmp/api_key)"

  cf start conjur-service-broker

  APP_URL="http://`cf app conjur-service-broker | grep -E -w 'urls:|routes:' | awk '{print $2}'`"
  cf create-service-broker conjur-service-broker "TEMPORARY" "TEMPORARY" $APP_URL --space-scoped

  printf "Waiting for Conjur to be ready... "
  while [[ ! `curl -X HEAD -is localhost:3000 | head -n1 | awk '{print $2}'` -eq '200' ]]
  do
    sleep 1
  done
  echo "Done."

  cf create-service conjur default conjur
popd

# start test app
pushd test_app
  cf push test-app --no-start --random-route
popd

# bind service to test app
cf bind-service test-app conjur
cf restage test-app
